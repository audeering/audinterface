stages:
  - prepare
  - test
  - doc
  - pypi

include:
  - project: devops/artifactory-token-helper
    file: .gitlab-ci-artifactory-token.yml

variables:
  ARTIFACTORY_GROUPS: "readers,deployers"
  ARTIFACTORY_TOKEN_VARS: "ARTIFACTORY_API_KEY,TWINE_PASSWORD"
  ARTIFACTORY_USERNAME_VARS: "ARTIFACTORY_USERNAME,TWINE_USERNAME"

.pytest:
  before_script:
    - python -V
  script:
    - pip install -r requirements.txt
    - pip install -r tests/requirements.txt
    - python -m pytest

python-3.6:
  extends: .pytest
  stage: test
  image: docker.audeering.com/audeering/python-3.6:latest

python-3.7:
  extends: .pytest
  stage: test
  image: docker.audeering.com/audeering/python-3.7:latest

python-3.8:
  extends: .pytest
  stage: test
  image: docker.audeering.com/audeering/python-3.8:latest

#test-windows-general:  https://gitlab.audeering.com/devops/gitlab-runners/-/issues/67
#  # Based on Python 3.8 by default
#  stage: test
#  tags:
#    - windows
#  script:
#    - pip install -r requirements.txt
#    - pip install -r tests/requirements.txt
#    - python -m pytest

docs:
  extends: .pytest
  stage: test
  image: docker.audeering.com/audeering/python-3.6:latest
  script:
    - pip install -r requirements.txt
    - pip install -r docs/requirements.txt
    - python -m sphinx -W docs/ -d build/doctrees build/html -b html
    - python -m sphinx -W docs/ build/linkcheck -b linkcheck
  artifacts:
    paths:
      - build/

pages:
  stage: doc
  image: docker.audeering.com/alpine
  variables:
    GIT_STRATEGY: none  # disable git fetch
  script:
    - cp -r build/html public
  dependencies:
    - docs
  artifacts:
    paths:
      - public
  only:
    refs:
      - tags

pypi:
  extends: .pytest
  stage: pypi
  image: docker.audeering.com/audeering/python-3.6:latest
  script:
    - python setup.py sdist bdist_wheel
    - python -m twine upload --repository local dist/*
  only:
    refs:
      - tags
